% CSP: Common Spitial Pattern
close all
clc
clear

load('Ex3');
Fs = 256;
N_ch = size(TrainData,1);
N_sample = size(TrainData,2);
N_trials_train = size(TrainData,3);
N_trials_test = size(TestData,3);
%% part a
clc
W = CSP_filter(TrainData,TrainLabel);
%%
close all
clc
X0 = TrainData(:,:,TrainLabel==0);
X1 = TrainData(:,:,TrainLabel==1);

for i = 1:size(X0,3)
Y0_W0(:,i) = W(:,1)'*X0(:,:,i);
Y0_W1(:,i) = W(:,end)'*X0(:,:,i);
end
for i = 1:size(X1,3)
Y1_W0(:,i) = W(:,1)'*X1(:,:,i);
Y1_W1(:,i) = W(:,end)'*X1(:,:,i);
end

selsect = 70;
figure
subplot(2,1,1)
plot(Y0_W0(:,selsect));
title('Top CSP Filter Foot Movement imagery')
subplot(2,1,2)
plot(Y0_W1(:,selsect));
title('Bottom CSP Filter Foot Movement imagery')


figure
subplot(2,1,1)
plot(Y1_W0(:,selsect));
title('Top CSP Filter Subtraction imagery')
subplot(2,1,2)
plot(Y1_W1(:,selsect));
title('Bottom CSP Filter Subtraction imagery')
%% part b
clc

W_CSP = W(:,[1,30]);

figure
subplot(1,2,1)
topoplotIndie(W(:,1),N_ch);
title('top CSP filter')
colorbar
colormap jet
subplot(1,2,2)
topoplotIndie(W(:,30),N_ch);
title('bottom CSP filter')
colorbar
colormap jet

%% part c
clc
N = N_trials_train; M = 3; cvMethod = 'Kfold';
cvIndices = crossvalind(cvMethod,N,M);

Class_train{1} = TrainData(:,:,cvIndices==1);
Class_label{1} = TrainLabel(1,cvIndices==1);
Class_train{2} = TrainData(:,:,cvIndices==2);
Class_label{2} = TrainLabel(1,cvIndices==2);
Class_train{3} = TrainData(:,:,cvIndices==3);
Class_label{3} = TrainLabel(1,cvIndices==3);

orders = [1,2,3;1,3,2;2,3,1];

for i = 1:3
    train{i} = cat(3,Class_train{orders(i,1)},Class_train{orders(i,2)});
    train_label{i} = [Class_label{orders(i,1)},Class_label{orders(i,2)}];
    valid{i} = Class_train{orders(i,3)};
    valid_label{i} = Class_label{orders(i,3)};
end

acc = [];

for i = 1:3
  W_train = CSP_filter(train{i},train_label{i});
  for F = 1:15
      Y_train=[];
      Y_valid = [];
      
      for j = 1:size(train{i},3)
          Y_train(:,:,j) = W_train(:,[1:F,31-F:30])'* train{i}(:,:,j);
      end
      for j = 1:size(valid{i},3)
          Y_valid(:,:,j) = W_train(:,[1:F,31-F:30])'* valid{i}(:,:,j);
      end
      var_train = squeeze(var(Y_train,1,2));
      var_valid = squeeze(var(Y_valid,1,2));
      
      Tbl = var_train'; ResponseVarName = train_label{i};
      Mdl{i,F} = fitcsvm(Tbl,ResponseVarName);
      [predict_valid_label,score] = predict(Mdl{i,F},var_valid');
      
      C = confusionmat(valid_label{i},predict_valid_label);
      acc(i,F) = trace(C)/size(valid{i},3)*100;
  end
end

Avg_acc = mean(acc,1);

figure
plot(1:15,Avg_acc)
xlabel('Number of Filter')
ylabel('Mean Accuracy')
%% pard d
[M,F] = max(Avg_acc);

W_train = CSP_filter(TrainData,TrainLabel);
Y_train=[];
Y_test = [];

for j = 1:size(TrainData,3)
    Y_train(:,:,j) = W_train(:,[1:F,31-F:30])'* TrainData(:,:,j);
end
for j = 1:size(TestData,3)
    Y_test(:,:,j) = W_train(:,[1:F,31-F:30])'* TestData(:,:,j);
end
var_test = squeeze(var(Y_test,1,2));

Tbl = var_train'; ResponseVarName = TrainLabel;
[predict_test_label,score] = predict(Mdl{3,F},var_test');

save TestLabel predict_test_label



function W = CSP_filter(TrainData,TrainLabel)
X0 = TrainData(:,:,TrainLabel==0);
X1 = TrainData(:,:,TrainLabel==1);

S0 = 0;
S1 = 0;

for i = 1:size(X0,3)
    S0 = S0 + cov(X0(:,:,i)')/size(TrainData,2);
end
for i = 1:size(X1,3)
    S1 = S1 + cov(X1(:,:,i)')/size(TrainData,2);

[V,D] = eig(S0,S1);
[B,I] = sort(diag(D),'descend');
W = V(:,I);
end
end
